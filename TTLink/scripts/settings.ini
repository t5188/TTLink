#!/system/bin/sh
scripts=$(realpath $0)
scripts_dir=$(dirname ${scripts})
parent_dir=$(dirname ${scripts_dir})
#Environment variable settings
export PATH="/data/adb/ap/bin:/data/adb/ksu/bin:/data/adb/magisk:$PATH"
module_dir="/data/adb/modules/ATTLink"

va1=$(getprop ro.build.version.release)
va2="11"
if [ "$va1" -ge "$va2" ]; then
  IPV4="iptables -w 100"
  IPV6="ip6tables -w 100"
else
  IPV4="iptables"
  IPV6="ip6tables"
fi

log() {
  export TZ=Asia/Shanghai
  now=$(date +"[%Y-%m-%d %H:%M:%S]")
  case $1 in
  Info)
    [ -t 1 ] && echo -e "\033[1;32m${now} [Info]: $2\033[0m" || echo "${now} [Info]: $2"
    ;;
  Warn)
    [ -t 1 ] && echo -e "\033[1;33m${now} [Warn]: $2\033[0m" || echo "${now} [Warn]: $2"
    ;;
  Error)
    [ -t 1 ] && echo -e "\033[1;31m${now} [Error]: $2\033[0m" || echo "${now} [Error]: $2"
    ;;
  *)
    [ -t 1 ] && echo -e "\033[1;30m${now} [$1]: $2\033[0m" || echo "${now} [$1]: $2"
    ;;
  esac
}

toast() {
  local event=$1
  am start -n re.tools/.main --es toast "$event" >/dev/null 2>&1
}

# inbounds_config_file
for file in ${parent_dir}/confs/*.json; do
  if awk '/"inbounds"/ {found=1; exit} END {exit !found}' "$file"; then
    inbounds_config_file="${parent_dir}/confs/$(basename "$file")"
    break
  fi
done

yq=${parent_dir}/binary/yq

public_log_dir=${parent_dir}/log

bin_box="${parent_dir}/binary/sing-box"
box_confs_dir="${parent_dir}/confs"
box_user=0
box_group=3005

# Can only use 'â€¦/', otherwise non-root mode cannot be used.
bin_xray="../binary/xray" 
xray_confx_dir="../confx"
xray_user=0
xray_group=23333

c_name="${bin_box##*/}"
chain_name=$(echo "$c_name" | awk '{print toupper($0)}')
proxy_mode="whitelist"
network_mode="tproxy"
fwmark="0x10000000/0xFFFFFFFF" #Do not use 100, otherwise it will conflict with wlan0.
table=2025

# Color Definition
red="\033[31m"
green="\033[32m"
yellow="\033[33m"
blue="\033[34m"

case "${proxy_mode}" in
"whitelist")
  package_list=(ai.x.grok com.google.android.apps.maps com.lemon.lvoverseas uz.unnarsx.cherrygram com.netease.idv.googleplay com.xingin.xhs app.nicegram app.revanced.android.gms app.revanced.android.youtube app.rvx.android.youtube bin.mt.plus bin.mt.termex by.green.tuber com.android.chrome com.android.providers.downloads com.android.vending com.avuscapital.trading212 com.binance.dev com.cloudflare.onedotonedotonedotone com.giffgaffmobile.controller com.github.android com.google.android.apps.authenticator2 com.google.android.apps.googlevoice com.google.android.apps.photos com.google.android.apps.translate com.google.android.gm com.google.android.gms com.google.android.googlequicksearchbox com.google.android.gsf com.google.android.inputmethod.latin com.google.android.marvin.talkback com.google.android.printservice.recommendation com.google.android.youtube com.google.ar.core com.microsoft.copilot com.openai.chatgpt com.reddit.frontpage com.talkatone.android com.termux com.topjohnwu.magisk com.transferwise.android com.twitter.android com.zhiliaoapp.musically io.github.huskydg.magisk me.bmax.apatch me.weishu.kernelsu notion.id org.mozilla.firefox org.telegram.messenger org.telegram.messenger.web org.thunderdog.challegram qt.fceimbhnru.jud vn.innoloop.VOALearningEnglish)
  ;;
"blacklist")
  package_list=()
  ;;
esac

appclones=(com.google.android.youtube)

# Manually add only the Cloudflare IP ranges that are currently in use as needed
# IPv4 network segment
intranet4=(104.16.0.0/13 198.41.128.0/17 172.64.0.0/13 0.0.0.0/8 10.0.0.0/8 100.64.0.0/10 127.0.0.0/8 169.254.0.0/16 172.16.0.0/12 192.0.0.0/24 192.168.0.0/16 224.0.0.0/3)
# IPv6 network segment
intranet6=(::/127 2408:8000::/20 2409:8000::/20 240a:4000::/21 240e::/18 fc00::/7 fe80::/10 ff00::/8)

AIDs=(0 1000 2000)

ip6tables="enable"
crond_task="enable"
dns2tun="enable"
quic="disable"
netChange="enable"

# settings.ini TTLink
